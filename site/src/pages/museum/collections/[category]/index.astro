---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { sortBy } from "lodash-es";
import ConditionalParent from "@/components/ConditionalParent.astro";
import CoverImage from "@/components/CoverImage.astro";
import Modal from "@/components/Modal.astro";
import Layout from "@/layouts/Layout.astro";
import { museumBaseUrl } from "@/lib/constants";
import { getMode } from "@/lib/mode";

interface Props {
  category: CollectionEntry<"exhibit-categories">;
  exhibits: CollectionEntry<"exhibits">[];
}

export async function getStaticPaths() {
  const allExhibits = await getCollection("exhibits");
  const categories = await getCollection("exhibit-categories");

  return categories.map((category) => ({
    params: { category: category.id },
    props: {
      category,
      exhibits: sortBy(
        allExhibits.filter(({ id }) => id.startsWith(`${category.id}/`)),
        ({ data }) => data.title
      ),
    } as Props,
  }));
}

const { category, exhibits } = Astro.props;
const { Content } = await render(category);

const shouldWrapImageInLink =
  getMode() === "broken" && category.id === "music";
const shouldDuplicateLink =
  getMode() === "broken" && category.id === "sports";
---

<Layout title={category.data.title}>
  <h2>{category.data.title}</h2>
  <Content />
  {
    /**
     * @break
     * location: Home Collection
     * wcag2:
     *   - 2.3.1
     *   - 2.3.2
     * wcag3: Flashing
     * description: The image thumbnails in the exhibit list on this page flash 4 times within a one-second period.
     * photosensitivity: true
     */
    /**
     * @break
     * location: Home Collection
     * wcag2: 2.3.3
     * wcag3: Motion
     * description: Each individual exhibit page under the Home collection includes a parallax effect on the background image.
     */
    category.data.dangerous && (
      <Modal id="warning-modal" mode="fixed">
        <div class="warning-content">
          <h2>Warning!</h2>
          <p>
            This category page demonstrates content that fails 2.3.1 and 2.3.2
            (related to flashes), and pages for its individual items demonstrate
            failures of 2.3.3 (related to animation). visitors who are sensitive
            to flashes or motion are advised to
            <a href={museumBaseUrl}>return to the homepage</a> and navigate
            elsewhere.
          </p>
          <p>
            If you wish to proceed, select a failure option below.
          </p>
          <div class="warning-buttons">
            <button name="submit" value="none">
              None
            </button>
            <button name="submit" value="AAA">
              Level AAA
            </button>
            <button name="submit" value="A">
              Level A
            </button>
          </div>
        </div>
      </Modal>
    )
  }
  <ul class="grid-wrapper" id="list">
    {
      exhibits.map(({ data, id }) => (
        <li>
          <ConditionalParent
            as="a"
            if={shouldWrapImageInLink}
            href={`../${id}/`}
          >
            <div class="image-container">
              <ConditionalParent
                as="a"
                if={shouldDuplicateLink}
                href={`../${id}/`}
              >
                <CoverImage
                  src={data.image}
                  alt={
                    data.skipAlt
                      ? null
                      : data[shouldDuplicateLink ? "title" : "imageDescription"]
                  }
                  objectPosition={data.imagePosition}
                  height="200"
                  widths={[960]}
                />
              </ConditionalParent>
            </div>
            <div class="content">
              <ConditionalParent
                as="a"
                if={!shouldWrapImageInLink}
                href={`../${id}/`}
              >
                {data.title}
              </ConditionalParent>
            </div>
          </ConditionalParent>
        </li>
      ))
    }
  </ul>
</Layout>

<script>
  import { showModal } from "@/lib/client/modal";

  const modalId = "warning-modal";
  const modalEl = document.getElementById(modalId);
  if (modalEl) {
    showModal(modalId);
    const form = modalEl.querySelector("form") as HTMLFormElement;
    form.addEventListener("submit", (event) => {
      const value = (event.submitter as HTMLButtonElement).value;
      const listEl = document.getElementById("list") as HTMLUListElement;
      if (value.startsWith("A")) listEl.classList.add("dangerous-list");
      if (value === "A") listEl.classList.add("dangerous-list-A");
      if (value === "none") listEl.classList.add("fading-list");
    });
  }
</script>

<style>
  @keyframes fade {
    0%,
    100% {
      opacity: 0.6;
    }
    50% {
      opacity: 1;
    }
  }

  @keyframes lightning {
    0%,
    12%,
    30%,
    50% {
      opacity: 0.5;
    }
    10%,
    11%,
    22%,
    29%,
    40%,
    49%,
    60%,
    99% {
      opacity: 1;
    }
  }

  ul {
    list-style: none;
    margin: 0;
    padding: calc(1rem * var(--ms6)) 0 calc(1rem * var(--ms10));
  }

  li {
    background: var(--white);
    border: 1px solid var(--hairline);
    grid-column-end: span 2;
  }

  .image-container {
    height: calc(1rem * var(--ms20));
    overflow: hidden;

    & img {
      width: 100%;
    }
  }

  .dangerous-list img {
    animation: linear 2s infinite lightning;
  }

  .dangerous-list-A .image-container {
    background-color: red;
  }

  .fading-list img {
    animation: linear 3s infinite fade;
  }

  .content a,
  .content:not(:has(a)) {
    display: block;
    padding: 1rem;
    text-align: center;
  }

  .warning-content {
    font-size: calc(1rem * var(--ms2));
    max-width: 60ch;
    padding: 1rem;

    & h2 {
      text-align: center;
    }
  }

  .warning-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
  }
</style>
